     1                                  SECTION .bss
     2 00000000 ??                      	Buff resb 1
     3                                  
     4                                  SECTION .data
     5                                  
     6                                  SECTION .text
     7                                  	global _start
     8                                  
     9                                  _start:
    10 00000000 90                      		nop						; Keep our capricious debugger happy
    11                                  
    12 00000001 B803000000              Read:	mov eax,3				; Specify sys_read call
    13 00000006 BB00000000              		mov ebx,0				; Specify File Descriptor 0: Standard Input
    14 0000000B B9[00000000]            		mov ecx,Buff			; Pass address of buffer to read to
    15 00000010 BA00040000              		mov edx,1024			; Tell sys_read to read one char from stdin
    16 00000015 CD80                    		int 80H					; Call sys_read
    17 00000017 89C6                    		mov esi,eax				; Copy sys_read return value for safekeeping
    18                                  
    19 00000019 83F800                  		cmp eax,0				; Look at sys_read's return value in EAX
    20 0000001C 7433                    		je Exit					; Jump If Equal to 0 (0 means EOF) to Exit
    21                                  
    22                                  		; --- Set up registers for the process buffer step
    23 0000001E 89F1                    		mov ecx,esi				; Place the number of bytes read into ecx
    24 00000020 BD[00000000]            		mov ebp,Buff			; Place the address of the buffer into ebp
    25 00000025 4D                      		dec ebp					; Decrease it by one so we can use it as an offset
    26                                  								; (Instead of a count)
    27                                  Scan:
    28 00000026 807C0D0061              		cmp byte [ebp+ecx],61H	; Test input char against lowercase 'a'
    29 0000002B 720C                    		jb ScanEnd				; If below 'a' in ASCII chart, not lowercase
    30 0000002D 807C0D007A              		cmp byte [ebp+ecx],7AH	; Test input char against lowercase 'z'
    31 00000032 7705                    		ja ScanEnd				; If above 'z' in ASCII chart, not lowercase
    32                                  								; --> At this point, the char is lowercase
    33 00000034 806C0D0020              		sub byte [ebp+ecx],20H
    34                                  
    35                                  ScanEnd:
    36 00000039 49                      		dec ecx					; Decrement the number of bytes (ecx)
    37 0000003A 75EA                    		jnz Scan				; If more characters, continue scanning
    38                                  Write:
    39 0000003C B804000000              		mov eax,4				; Code for sys_write call
    40 00000041 BB01000000              		mov ebx,1				; Specify File Descriptor 1: Standard Output
    41 00000046 B9[00000000]            		mov ecx,Buff			; Pass address of the character to write
    42 0000004B 89F2                    		mov edx,esi				; Pass number of chars to write (stored it in esi)
    43 0000004D CD80                    		int 80H					; Call sys_write
    44 0000004F EBB0                    		jmp Read				; Go back to Read to get another character
    45                                  
    46                                  
    47 00000051 B801000000              Exit:	mov eax,1				; Code for Exit Systcall
    48 00000056 BB00000000              		mov ebx,0				; Return a code of zero to Linux
    49 0000005B CD80                    		int 80H					; Make kernel call to exit program
